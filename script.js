/*
lesson-1 task-1
 */

let tempCelsius = prompt("Введите значение температуры в градусах Цельсия");
let tempFahrenheit = (9 / 5) * tempCelsius + 32;
if (!tempCelsius){
    tempCelsius=prompt('Введите валидное значение температуры в градусах Цельсия')
}
alert(tempCelsius+' градусов Цельсия будут равняться \n'+ tempFahrenheit + ' градусов по Фаренгейту');

/*
lesson-1 task-2
 */

let a=1;
let b=2;
let c='3';

console.log(a+b); //3
console.log(a-b); // -1
console.log(a+c); // 13 (конкатенация)
console.log(a-c); // -2 (переменная c преобразована в число)
console.log(a*c); // 3 (переменная c преобразована в число)
console.log(a/c); // 0.333333 (переменная c преобразована в число)

/*
lesson-1 task-3
 */

let admin = 'Василий';
let name = admin; // присваивается значение которое именно в этот момент находится в переменной, при изменении admin то что мы присвоили переменной name не изменится
console.log(name);
admin+=admin;
console.log('в переменной admin: '+admin+'\nв переменной name '+name);

/*
lesson-1 task-4
 */

console.log(1000 + "108"); // 1000108. Сложение со строкой приведет к склеиванию значений.
console.log(true+'108'); // true108 тоже самое

/*
lesson-1 task-5
 */

// в случае с defer скрипты гарантированно отрабатывают когда страница уже отрендерена и скрипты выполняются в порядке их вызова на странице. Сначала весь стэк скриптов загружается,
// а затем они начинают по очереди исполнятся, но при этом в первую очередь прогружается вся страница.
// в случае с async также скрипты не мешают началу загрузки страницы, но если скрипт маленький, а страница большая, то он может загрузиться раньше всего документа,
// но при этом начнет исполняться немедленно после того как полностью загрузится. Друг от друга async скрипты также не зависят.